#!/bin/bash
# vim: set ft=sh:

files="\
  .login .profile \
  .shrc .git.sh \
  .zlogin .zprofile .zshenv \
  .zshrc \
  .grml.zsh .grml.help.zsh \
  .bashrc .bash_profile \
  .xsession .Xresources .xinitrc \
  .curlrc .toprc \
  .gitconfig \
  .tmux.conf \
  .ssh/authorized_keys \
  .ssh/config \
  .local/bin/harunou \
  .local/bin/harunou-setup \
  .local/bin/harunou-ssl \
  .local/bin/harunou-aur \
  .local/bin/harunou-np \
  .local/bin/harunou-completion.zsh \
  .local/share/kbd/keymaps/ruwin_sh_sh_UTF-8.map \
  .local/share/applications/xmonad.desktop \
  .config/autostart/xbindkeys.desktop \
  .xmonad/xmonad.hs \
  .xmobar/xmobar.hs \
  .vscode/harunou.code-profile \
  .config/Code/User/settings.json \
  .FBReader/options.xml \
  .vim/vimrc \
  .vifm/vifmrc .vifm/colors/harunou.vifm \
  .xbindkeysrc.scm \
  .gnupg/gpg-agent.conf \
  .powershell/Microsoft.PowerShell_profile.ps1 \
  .powershell/functions.ps1
  "

  if [ $# -gt 0 ]; then 
    command="$1"
    shift
  fi

  case "$command" in
    tar) # working_directory, tar_params
      working_dir="$1"
      shift
      cd "$working_dir"
      exec tar "$@" $files
      ;;

    setup-repo) # repo_directory, dots_directory
      repo_dir="$1"
      dots_dir="$2"
      cd "$repo_dir"
      git config --replace-all remote.origin.url git@github.com:harunou/harunou.git
      git config config.exportDirectory "$dots_dir"
      git config alias.import '!./config tar "$(git config config.exportDirectory)" -cf - | ./config tar ./ -xf -'
      git config alias.export '!./config tar ./ -cf - | ./config tar "$(git config config.exportDirectory)" -xf -'
      ;;

    clone) # repo_directory, dot_directory
      set -e
      git clone https://github.com/harunou/harunou.git ${1:-.harunou} 
      harunou config setup-repo "${1:-.harunou}" "${2:-$HOME}"
      ;;

    prune) # working_directory
      working_dir="$1"
      cd $working_dir

      for file in $files; do
        [ -e "$file" ] && rm -r $file
      done
      rm -f '. harunou'
      ;;

    '')
      echo "Usage: `basename "$0"` <command> [options]" 
      ;;

    *)
      echo "`basename "$0"` $command: unknown command." >&2; exit 1 
      ;;
  esac
