#!/bin/bash
# vim: ft=sh sw=2

WORKDIR="${0%/*}"
source $WORKDIR/epo.conf

BASE_NAME=`basename "$0"`
AUTH_PROXY_PID="$BASE_NAME-auth-proxy.pid"

h_read_epo_user_password() {
  echo -n "password for $EPOUSER: "
  read -s PASSWORD
}

h_read_epo_user_digipass() {
  echo -n "digipass for $EPOUSER: "
  read DIGIPASS
}

h_start_pulse() {
  cd /opt/pulsesecure/bin/
  sudo ./startup.sh start
  ./pulseUI
}

h_set_vpn(){
  sudo harunou openconnect status >/dev/null 2>&1
  is_vpn_up=$?
  if [ $is_vpn_up -eq 0 ]; then 
    harunou openconnect down
    sleep 1
  fi
  echo "Setting up vpn..."
  harunou openconnect up $EPOUSER $DIGIPASS $EPOSERVER "$EPOHOSTS"
}

h_set_kerberos(){
  echo "Setting up kerberos ticket..."
  echo "$PASSWORD" | kinit $EPOUSER >/dev/null 2>&1
}

h_set_proxy() {
  echo "Setting up proxy..."
  echo `curl --silent https://registry.npmjs.org/ --proxy $EPOPROXY --proxy-user "$EPOUSER:$PASSWORD"`
}

h_remote_desktop() {
  xfreerdp /bpp:32 /gfx +aero +fonts  /u:$EPOUSER /v:$EPOWORKSTATION /size:100%w /cert:ignore /floatbar:sticky:off,show:always
}

h_vpn_status() {
  ping -c 3 -W 1 -q $EPOPING >/dev/null 2>&1
  if [ $? -gt 0 ]; then
    echo "DOWN"
  else 
    echo "UP"
  fi
}

h_split_routes() {
  INTERFACE=tun0
  ROUTES=`ip route | grep $INTERFACE`
  TUN_IP=`ip -4 addr show $INTERFACE | grep -oP "(?<=inet\s)\d+(\.\d+){3}"`
  if [[ ${ROUTES:+x} == "x" && ${TUN_IP:+x} == "x" ]]; then
    echo $ROUTES  | while read route; do
    sudo ip r delete $route
  done
  sudo ip route add 10.0.0.0/8 via $TUN_IP dev $INTERFACE metric 1
  fi
  ip route
}

if [ $# -gt 0 ]; then
  command="$1"
  shift
fi

case "$command" in
  pulse)
    h_start_pulse
    ;;

  routes)
    h_split_routes
    ;;

  vpn)
    h_read_epo_user_digipass
    h_set_vpn
    ;;

  kerberos)
    h_read_epo_user_password
    echo ""
    h_set_kerberos
    ;;

  proxy)
    h_read_epo_user_password
    echo ""
    h_set_proxy
    ;;

  desktop)
    h_remote_desktop
    ;;

  status)
    echo "Cheking vpn..."
    h_vpn_status
    echo ""
    echo "Checking kerberos..."
    klist
    sleep 0.1
    echo ""
    echo "Checking proxy..."
    curl --silent https://registry.npmjs.org/ --proxy $EPOPROXY
    echo ""
    echo "Checking proxy ping..."
    PID=`cat /tmp/$AUTH_PROXY_PID`
    if [[ ${PID:+x} == "x" ]]; then
      echo "ping is on, pid: $PID"
    fi
    ;;

  vpn-status)
    h_vpn_status
    ;;

  '') 
    # h_read_epo_user_password
    # echo ""
    # h_read_epo_user_digipass
    # h_set_vpn
    # sleep 2
    # h_vpn_status
    # echo ""
    # h_set_kerberos
    # klist
    # sleep 0.1
    # echo ""
    # h_set_proxy
    ;;

  *) 
    echo "$BASE_NAME $command: unknown command." >&2; exit 1 
    ;;
esac

