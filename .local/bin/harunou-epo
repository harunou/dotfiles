#!/bin/bash
# vim:set et sw=2:

WORKDIR="${0%/*}"
source $WORKDIR/epo.conf

BASE_NAME=`basename "$0"`
AUTH_PROXY_PID="$BASE_NAME-auth-proxy.pid"

read_epo_user_password() {
  echo -n "password for $EPOUSER: "
  read -s PASSWORD
}

read_epo_user_digipass() {
  echo -n "digipass for $EPOUSER: "
  read DIGIPASS
}

start_pulse() {
  cd /opt/pulsesecure/bin/
  sudo ./startup.sh start
  ./pulseUI
}

set_vpn(){
  sudo harunou openconnect status >/dev/null 2>&1
  is_vpn_up=$?
  if [ $is_vpn_up -eq 0 ]; then 
    harunou openconnect down
    sleep 1
  fi
  echo "Setting up vpn..."
  harunou openconnect up $EPOUSER $DIGIPASS $EPOSERVER "$EPOHOSTS"
}

set_kerberos(){
  echo "Setting up kerberos ticket..."
  echo "$PASSWORD" | kinit $EPOUSER >/dev/null 2>&1
}

set_proxy() {
  echo "Setting up proxy..."
  echo `curl --silent https://registry.npmjs.org/ --proxy $EPOPROXY --proxy-user "$EPOUSER:$PASSWORD"`
}

ping_proxy(){
  while true; do
    # set_proxy >/dev/null 2>&1
    echo "ping"
    sleep 10
  done &
  echo $! >"/tmp/$AUTH_PROXY_PID"
}

kick_ping_proxy(){
  PID=`cat /tmp/$AUTH_PROXY_PID`
  if [[ ${PID:+x} == "x" ]]; then
    kill -9 $PID
    echo "" >"/tmp/$AUTH_PROXY_PID"
    echo "Proxy ping kicked"
  fi
}

remote_desktop() {
  xfreerdp /bpp:32 /gfx +aero +fonts  /u:$EPOUSER /v:$EPOWORKSTATION /size:100%w /cert:ignore /floatbar:sticky:off,show:always
}

vpn_status() {
  ping -c 3 -W 1 -q $EPOPING >/dev/null 2>&1
  if [ $? -gt 0 ]; then
    echo "DOWN"
  else 
    echo "UP"
  fi
}

split_routes() {
  INTERFACE=tun0
  ROUTES=`ip route | grep $INTERFACE`
  TUN_IP=`ip -4 addr show $INTERFACE | grep -oP "(?<=inet\s)\d+(\.\d+){3}"`
  if [[ ${ROUTES:+x} == "x" && ${TUN_IP:+x} == "x" ]]; then
    echo $ROUTES  | while read route; do
      sudo ip r delete $route
    done
    sudo ip route add 10.0.0.0/8 via $TUN_IP dev $INTERFACE metric 1
  fi
  ip route
}

if [ $# -gt 0 ]; then
  command="$1"
  shift
fi

case "$command" in
  pulse)
    start_pulse
    ;;

  routes)
    split_routes
    ;;

  vpn)
    read_epo_user_digipass
    set_vpn
    ;;

  kerberos)
    read_epo_user_password
    echo ""
    set_kerberos
    ;;

  proxy)
    operation="$1"
    shift
    case "$operation" in 
      ping)
	# kick_ping_proxy
	# read_epo_user_password
	# echo ""
	# set_proxy
        # if [ $? > 0 ]; then
          # exit 1
        # fi
	ping_proxy 
        # >/dev/null &
	;;

      kick)
	kick_ping_proxy
	;;

      '')
	read_epo_user_password
	echo ""
	set_proxy
	;;
    esac
    ;;

  desktop)
    remote_desktop
    ;;

  status)
    echo "Cheking vpn..."
    vpn_status
    echo ""
    echo "Checking kerberos..."
    klist
    sleep 0.1
    echo ""
    echo "Checking proxy..."
    curl --silent https://registry.npmjs.org/ --proxy $EPOPROXY
    echo ""
    echo "Checking proxy ping..."
    PID=`cat /tmp/$AUTH_PROXY_PID`
    if [[ ${PID:+x} == "x" ]]; then
      echo "ping is on, pid: $PID"
    fi
    ;;

  vpn-status)
    vpn_status
    ;;

  '') 
    # read_epo_user_password
    # echo ""
    # read_epo_user_digipass
    # set_vpn
    # sleep 2
    # vpn_status
    # echo ""
    # set_kerberos
    # klist
    # sleep 0.1
    # echo ""
    # set_proxy
    ;;

  *) 
    echo "$BASE_NAME $command: unknown command." >&2; exit 1 
    ;;
esac

