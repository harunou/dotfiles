#!/bin/bash
# vim: set ft=sh sw=2

h_as_root() {
  if [ "$1" = exec ]; then ex="exec"; shift; fi
  $ex sudo "$@"
}

h_setup_basics() {
  if [ ! -f "$HOME/. harunou" -o -r "$HOME/. harunou" ]; then
    [ -f "$HOME/. harunou" ] || basics=1
    touch "$HOME/. harunou"
    chmod 0000 "$HOME/. harunou"
  fi
  [ -z "$basics" ] || echo "Initializing basic configuration."
}

h_setup_shell() {
  zsh=$(grep 'zsh$' /etc/shells 2>/dev/null|head -1)
  if [ -x "$zsh" ] && grep "^$LOGNAME:" /etc/passwd >/dev/null; then
    if ! grep "^$LOGNAME:.*zsh" /etc/passwd >/dev/null; then
      echo "Changing login shell."
      chsh -s "$zsh"
    fi
  fi
}

h_setup_vim(){
  vimdir="$HOME/.vim"
  vimplugins="\
    https://github.com/pangloss/vim-javascript \
    https://github.com/tpope/vim-sensible \
    https://github.com/tpope/vim-commentary \
    https://github.com/tpope/vim-ragtag \
    https://github.com/tpope/vim-surround \
    https://github.com/prettier/vim-prettier \
    https://github.com/neovimhaskell/haskell-vim \
  "
  rm -rf "$vimdir/autoload" "$vimdir/bundle"
  mkdir -p "$vimdir/autoload" "$vimdir/bundle"
  curl -o "$vimdir/autoload/pathogen.vim" https://tpo.pe/pathogen.vim
  cd "$vimdir/bundle"
  for vimplugin in $vimplugins; do
    git clone "$vimplugin"
  done
}

h_setup_grml_zsh(){
  curl https://git.grml.org/f/grml-etc-core/etc/zsh/zshrc --output "$HOME/.grml.zsh" 
}

[ $# -gt 0 ] || set -- default

command="$1"
shift

case "$command" in
  default)
    h_setup_basics
    h_setup_shell
    ;;

  shell)
    h_setup_shell
    ;;

  grml-zsh)
    h_setup_grml_zsh
    ;;

  vim)
    h_setup_vim
    ;;

  nvm)
    nvm_version=$(git ls-remote --tags https://github.com/nvm-sh/nvm.git | sort -t '/' -k 3 -V | tail -n 1 | awk -F'[/^]' '{print $3}')
    curl https://raw.githubusercontent.com/nvm-sh/nvm/$nvm_version/install.sh | env METHOD=git PROFILE=/dev/null bash -
    ;;

  console)
    setfont ter-v18n.psf.gz
    h_as_root loadkeys $HOME/.local/share/kbd/keymaps/ruwin_sh_sh_UTF-8.map
    ;;

  '') echo "Usage: `basename "$0"` <command> [options]" 
    ;;

  *) 
    echo "`basename "$0"` $command: unknown command." >&2; exit 1 
    ;;
esac
